<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://peerpoll.github.io/</id>
    <title>Gridea</title>
    <updated>2022-02-18T09:02:00.732Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://peerpoll.github.io/"/>
    <link rel="self" href="https://peerpoll.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://peerpoll.github.io/images/avatar.png</logo>
    <icon>https://peerpoll.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Docker学习]]></title>
        <id>https://peerpoll.github.io/post/docker-xue-xi/</id>
        <link href="https://peerpoll.github.io/post/docker-xue-xi/">
        </link>
        <updated>2022-02-18T09:01:41.000Z</updated>
        <content type="html"><![CDATA[<h1>Docker安装</h1>
<p>1.下载docker,需要root权限，且能够联网</p>
<pre><code class="language-shell">wget -qO- https://get.docker.com/ | sh
modprobe: FATAL: Module aufs not found /lib/modules/4.4.0-36-generic
+ sh -c 'sleep 3; yum -y -q install docker-engine'
&lt;Snip&gt;
If you would like to use Docker as a non-root user, you should
now consider adding your user to the &quot;docker&quot; group with
something like:
sudo usermod -aG docker your-user
Remember that you will have to log out and back in...
</code></pre>
<p>2.当需要增加非root用户使用docker时，输入以下代码</p>
<pre><code class="language-shell">sudo usermod -aG docker npoulton
</code></pre>
<p>3.可以使用以下命令查看是否安装完成，并查看版本</p>
<pre><code class="language-shell">docker --version
</code></pre>
<h1>常规的查询命令</h1>
1.查看镜像列表
```shell
docker image ls
REPOSITORY TAG IMAGE ID CREATED SIZE
```
Docker 的每个镜像都有自己的唯一 ID。可以通过引用镜像的 ID 或名称来使用镜像。
如果选择使用镜像 ID，通常只需要输入 ID 开头的几个字符即可——因为 ID 是唯一的，Docker 知道用户想引用的具体镜像是哪个。
<p>2.容器启动<br>
利用docker container run启动容器</p>
<pre><code class="language-shell">docker container run -it centos:latest /bin/bash
</code></pre>
<p>其中 -it 参数告诉 Docker 开启容器的交互模式并将读者当前的 Shell 连接到容器终端<br>
centos:latest 启动容器的镜像版本<br>
/bin/bash  表示的是需要运行的进程</p>
<p>3.查看处于运行状态中的容器<br>
docker container ls  查看系统内全部处于运行状态的容器。</p>
<pre><code class="language-shell">docker container ls
CONTAINER ID IMAGE COMMAND CREATED STATUS NAMES
de64c1401f7d   centos:latest   &quot;/bin/bash&quot;   7 minutes ago   Up 7 minutes             zealous_bardeen
</code></pre>
<p>docker container ls -a 查看所有容器，包括处于停止状态的容器。</p>
<p>4.连接到运行中的容器<br>
docker container exec 可以将 Shell 连接到一个运行中的容器终端。</p>
<pre><code class="language-shell">docker container exec -it zealous_bardeen bash
</code></pre>
<p>5.停止、杀死容器<br>
docker container stop  来停止容器</p>
<pre><code class="language-shell">docker container stop zealous_bardeen
</code></pre>
<p>docker container rm  杀死容器</p>
<pre><code class="language-shell">docker container rm zealous_bardeen
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker初学]]></title>
        <id>https://peerpoll.github.io/post/docker-chu-xue/</id>
        <link href="https://peerpoll.github.io/post/docker-chu-xue/">
        </link>
        <updated>2022-02-18T07:05:42.000Z</updated>
        <content type="html"><![CDATA[<h1>Docker安装</h1>
<p>1.下载docker,需要root权限，且能够联网</p>
<pre><code class="language-shell">wget -qO- https://get.docker.com/ | sh
modprobe: FATAL: Module aufs not found /lib/modules/4.4.0-36-generic
+ sh -c 'sleep 3; yum -y -q install docker-engine'
&lt;Snip&gt;
If you would like to use Docker as a non-root user, you should
now consider adding your user to the &quot;docker&quot; group with
something like:
sudo usermod -aG docker your-user
Remember that you will have to log out and back in...
</code></pre>
<p>2.当需要增加非root用户使用docker时，输入以下代码</p>
<pre><code class="language-shell">sudo usermod -aG docker npoulton
</code></pre>
<p>3.可以使用以下命令查看是否安装完成，并查看版本</p>
<pre><code class="language-shell">docker --version
</code></pre>
<h1>常规的查询命令</h1>
1.查看镜像列表
```shell
docker image ls
REPOSITORY TAG IMAGE ID CREATED SIZE
```
Docker 的每个镜像都有自己的唯一 ID。可以通过引用镜像的 ID 或名称来使用镜像。
如果选择使用镜像 ID，通常只需要输入 ID 开头的几个字符即可——因为 ID 是唯一的，Docker 知道用户想引用的具体镜像是哪个。
<p>2.容器启动<br>
利用docker container run启动容器</p>
<pre><code class="language-shell">docker container run -it centos:latest /bin/bash
</code></pre>
<p>其中 -it 参数告诉 Docker 开启容器的交互模式并将读者当前的 Shell 连接到容器终端<br>
centos:latest 启动容器的镜像版本<br>
/bin/bash  表示的是需要运行的进程</p>
<p>3.查看处于运行状态中的容器<br>
docker container ls  查看系统内全部处于运行状态的容器。</p>
<pre><code class="language-shell">docker container ls
CONTAINER ID IMAGE COMMAND CREATED STATUS NAMES
de64c1401f7d   centos:latest   &quot;/bin/bash&quot;   7 minutes ago   Up 7 minutes             zealous_bardeen
</code></pre>
<p>docker container ls -a 查看所有容器，包括处于停止状态的容器。</p>
<p>4.连接到运行中的容器<br>
docker container exec 可以将 Shell 连接到一个运行中的容器终端。</p>
<pre><code class="language-shell">docker container exec -it zealous_bardeen bash
</code></pre>
<p>5.停止、杀死容器<br>
docker container stop  来停止容器</p>
<pre><code class="language-shell">docker container stop zealous_bardeen
</code></pre>
<p>docker container rm  杀死容器</p>
<pre><code class="language-shell">docker container rm zealous_bardeen
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://peerpoll.github.io/post/hello-gridea/</id>
        <link href="https://peerpoll.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>